
/home/hamada/risc-v_git/riscv-tests/work/rv32i_m/F/recoding.elf:     ファイル形式 elf32-littleriscv


セクション .text.init の逆アセンブル:

00400000 <_start>:

#include "riscv_test.h"
#include "test_macros.h"

RVTEST_RV64UF
RVTEST_CODE_BEGIN
  400000:	04c0006f          	j	40004c <reset_vector>

00400004 <trap_vector>:
  400004:	34202f73          	csrr	t5,mcause
  400008:	00800f93          	li	t6,8
  40000c:	03ff0a63          	beq	t5,t6,400040 <write_tohost>
  400010:	00900f93          	li	t6,9
  400014:	03ff0663          	beq	t5,t6,400040 <write_tohost>
  400018:	00b00f93          	li	t6,11
  40001c:	03ff0263          	beq	t5,t6,400040 <write_tohost>
  400020:	ffc00f17          	auipc	t5,0xffc00
  400024:	fe0f0f13          	addi	t5,t5,-32 # 0 <tohost-0x300000>
  400028:	000f0463          	beqz	t5,400030 <trap_vector+0x2c>
  40002c:	000f0067          	jr	t5
  400030:	34202f73          	csrr	t5,mcause
  400034:	000f5463          	bgez	t5,40003c <handle_exception>
  400038:	0040006f          	j	40003c <handle_exception>

0040003c <handle_exception>:
  40003c:	5391e193          	ori	gp,gp,1337

00400040 <write_tohost>:
  400040:	fff00f17          	auipc	t5,0xfff00
  400044:	fc3f2023          	sw	gp,-64(t5) # 300000 <tohost>
  400048:	ff9ff06f          	j	400040 <write_tohost>

0040004c <reset_vector>:
  40004c:	00000093          	li	ra,0
  400050:	00000113          	li	sp,0
  400054:	00000193          	li	gp,0
  400058:	00000213          	li	tp,0
  40005c:	00000293          	li	t0,0
  400060:	00000313          	li	t1,0
  400064:	00000393          	li	t2,0
  400068:	00000413          	li	s0,0
  40006c:	00000493          	li	s1,0
  400070:	00000513          	li	a0,0
  400074:	00000593          	li	a1,0
  400078:	00000613          	li	a2,0
  40007c:	00000693          	li	a3,0
  400080:	00000713          	li	a4,0
  400084:	00000793          	li	a5,0
  400088:	00000813          	li	a6,0
  40008c:	00000893          	li	a7,0
  400090:	00000913          	li	s2,0
  400094:	00000993          	li	s3,0
  400098:	00000a13          	li	s4,0
  40009c:	00000a93          	li	s5,0
  4000a0:	00000b13          	li	s6,0
  4000a4:	00000b93          	li	s7,0
  4000a8:	00000c13          	li	s8,0
  4000ac:	00000c93          	li	s9,0
  4000b0:	00000d13          	li	s10,0
  4000b4:	00000d93          	li	s11,0
  4000b8:	00000e13          	li	t3,0
  4000bc:	00000e93          	li	t4,0
  4000c0:	00000f13          	li	t5,0
  4000c4:	00000f93          	li	t6,0
  4000c8:	f1402573          	csrr	a0,mhartid
  4000cc:	00051063          	bnez	a0,4000cc <reset_vector+0x80>
  4000d0:	00000297          	auipc	t0,0x0
  4000d4:	01028293          	addi	t0,t0,16 # 4000e0 <reset_vector+0x94>
  4000d8:	30529073          	csrw	mtvec,t0
  4000dc:	18005073          	csrwi	satp,0
  4000e0:	00000297          	auipc	t0,0x0
  4000e4:	02028293          	addi	t0,t0,32 # 400100 <reset_vector+0xb4>
  4000e8:	30529073          	csrw	mtvec,t0
  4000ec:	800002b7          	lui	t0,0x80000
  4000f0:	fff28293          	addi	t0,t0,-1 # 7fffffff <_end+0x7fbffd0f>
  4000f4:	3b029073          	csrw	pmpaddr0,t0
  4000f8:	01f00293          	li	t0,31
  4000fc:	3a029073          	csrw	pmpcfg0,t0
  400100:	30405073          	csrwi	mie,0
  400104:	00000297          	auipc	t0,0x0
  400108:	01428293          	addi	t0,t0,20 # 400118 <reset_vector+0xcc>
  40010c:	30529073          	csrw	mtvec,t0
  400110:	30205073          	csrwi	medeleg,0
  400114:	30305073          	csrwi	mideleg,0
  400118:	00000193          	li	gp,0
  40011c:	00000297          	auipc	t0,0x0
  400120:	ee828293          	addi	t0,t0,-280 # 400004 <trap_vector>
  400124:	30529073          	csrw	mtvec,t0
  400128:	00100513          	li	a0,1
  40012c:	01f51513          	slli	a0,a0,0x1f
  400130:	00054c63          	bltz	a0,400148 <reset_vector+0xfc>
  400134:	0ff0000f          	fence
  400138:	00100193          	li	gp,1
  40013c:	05d00893          	li	a7,93
  400140:	00000513          	li	a0,0
  400144:	00000073          	ecall
  400148:	ffc00297          	auipc	t0,0xffc00
  40014c:	eb828293          	addi	t0,t0,-328 # 0 <tohost-0x300000>
  400150:	00028a63          	beqz	t0,400164 <reset_vector+0x118>
  400154:	10529073          	csrw	stvec,t0
  400158:	0000b2b7          	lui	t0,0xb
  40015c:	10928293          	addi	t0,t0,265 # b109 <tohost-0x2f4ef7>
  400160:	30229073          	csrw	medeleg,t0
  400164:	30005073          	csrwi	mstatus,0
  400168:	00002537          	lui	a0,0x2
  40016c:	30052073          	csrs	mstatus,a0
  400170:	00305073          	csrwi	fcsr,0
  400174:	00000297          	auipc	t0,0x0
  400178:	01428293          	addi	t0,t0,20 # 400188 <reset_vector+0x13c>
  40017c:	34129073          	csrw	mepc,t0
  400180:	f1402573          	csrr	a0,mhartid
  400184:	30200073          	mret

  # Make sure infinities with different mantissas compare as equal.
  fld f0, minf, a0
  400188:	00000517          	auipc	a0,0x0
  40018c:	14853007          	fld	ft0,328(a0) # 4002d0 <begin_signature>
  fld f1, three, a0
  400190:	00000517          	auipc	a0,0x0
  400194:	14853087          	fld	ft1,328(a0) # 4002d8 <three>
  fmul.d f1, f1, f0
  400198:	1200f0d3          	fmul.d	ft1,ft1,ft0

0040019c <test_2>:
  TEST_CASE( 2, a0, 1, feq.d a0, f0, f1)
  40019c:	a2102553          	feq.d	a0,ft0,ft1
  4001a0:	00100393          	li	t2,1
  4001a4:	00200193          	li	gp,2
  4001a8:	0c751663          	bne	a0,t2,400274 <fail>

004001ac <test_3>:
  TEST_CASE( 3, a0, 1, fle.d a0, f0, f1)
  4001ac:	a2100553          	fle.d	a0,ft0,ft1
  4001b0:	00100393          	li	t2,1
  4001b4:	00300193          	li	gp,3
  4001b8:	0a751e63          	bne	a0,t2,400274 <fail>

004001bc <test_4>:
  TEST_CASE( 4, a0, 0, flt.d a0, f0, f1)
  4001bc:	a2101553          	flt.d	a0,ft0,ft1
  4001c0:	00000393          	li	t2,0
  4001c4:	00400193          	li	gp,4
  4001c8:	0a751663          	bne	a0,t2,400274 <fail>

  # Likewise, but for zeroes.
  fcvt.d.w f0, x0
  4001cc:	d2000053          	fcvt.d.w	ft0,zero
  li a0, 1
  4001d0:	00100513          	li	a0,1
  fcvt.d.w f1, a0
  4001d4:	d20500d3          	fcvt.d.w	ft1,a0
  fmul.d f1, f1, f0
  4001d8:	1200f0d3          	fmul.d	ft1,ft1,ft0

004001dc <test_5>:
  TEST_CASE(5, a0, 1, feq.d a0, f0, f1)
  4001dc:	a2102553          	feq.d	a0,ft0,ft1
  4001e0:	00100393          	li	t2,1
  4001e4:	00500193          	li	gp,5
  4001e8:	08751663          	bne	a0,t2,400274 <fail>

004001ec <test_6>:
  TEST_CASE(6, a0, 1, fle.d a0, f0, f1)
  4001ec:	a2100553          	fle.d	a0,ft0,ft1
  4001f0:	00100393          	li	t2,1
  4001f4:	00600193          	li	gp,6
  4001f8:	06751e63          	bne	a0,t2,400274 <fail>

004001fc <test_7>:
  TEST_CASE(7, a0, 0, flt.d a0, f0, f1)
  4001fc:	a2101553          	flt.d	a0,ft0,ft1
  400200:	00000393          	li	t2,0
  400204:	00700193          	li	gp,7
  400208:	06751663          	bne	a0,t2,400274 <fail>

  # When converting small doubles to single-precision subnormals,
  # ensure that the extra precision is discarded.
  flw f0, big, a0
  40020c:	00000517          	auipc	a0,0x0
  400210:	0d452007          	flw	ft0,212(a0) # 4002e0 <big>
  fld f1, tiny, a0
  400214:	00000517          	auipc	a0,0x0
  400218:	0d453087          	fld	ft1,212(a0) # 4002e8 <tiny>
  fcvt.s.d f1, f1
  40021c:	4010f0d3          	fcvt.s.d	ft1,ft1
  fmul.s f0, f0, f1
  400220:	10107053          	fmul.s	ft0,ft0,ft1
  fmv.x.s a0, f0
  400224:	e0000553          	fmv.x.w	a0,ft0
  lw a1, small
  400228:	00000597          	auipc	a1,0x0
  40022c:	0bc5a583          	lw	a1,188(a1) # 4002e4 <small>

00400230 <test_10>:
  TEST_CASE(10, a0, 0, sub a0, a0, a1)
  400230:	40b50533          	sub	a0,a0,a1
  400234:	00000393          	li	t2,0
  400238:	00a00193          	li	gp,10
  40023c:	02751c63          	bne	a0,t2,400274 <fail>

  # Make sure FSD+FLD correctly saves and restores a single-precision value.
  flw f0, three, a0
  400240:	00000517          	auipc	a0,0x0
  400244:	09852007          	flw	ft0,152(a0) # 4002d8 <three>
  fadd.s f1, f0, f0
  400248:	000070d3          	fadd.s	ft1,ft0,ft0
  fadd.s f0, f0, f0
  40024c:	00007053          	fadd.s	ft0,ft0,ft0
  fsd f0, tiny, a0
  400250:	00000517          	auipc	a0,0x0
  400254:	08053c27          	fsd	ft0,152(a0) # 4002e8 <tiny>
  fld f0, tiny, a0
  400258:	00000517          	auipc	a0,0x0
  40025c:	09053007          	fld	ft0,144(a0) # 4002e8 <tiny>

00400260 <test_20>:
  TEST_CASE(20, a0, 1, feq.s a0, f0, f1)
  400260:	a0102553          	feq.s	a0,ft0,ft1
  400264:	00100393          	li	t2,1
  400268:	01400193          	li	gp,20
  40026c:	00751463          	bne	a0,t2,400274 <fail>

  TEST_PASSFAIL
  400270:	02301063          	bne	zero,gp,400290 <pass>

00400274 <fail>:
  400274:	0ff0000f          	fence
  400278:	00018063          	beqz	gp,400278 <fail+0x4>
  40027c:	00119193          	slli	gp,gp,0x1
  400280:	0011e193          	ori	gp,gp,1
  400284:	05d00893          	li	a7,93
  400288:	00018513          	mv	a0,gp
  40028c:	00000073          	ecall

00400290 <pass>:
  400290:	0ff0000f          	fence
  400294:	00100193          	li	gp,1
  400298:	05d00893          	li	a7,93
  40029c:	00000513          	li	a0,0
  4002a0:	00000073          	ecall

RVTEST_CODE_END
  4002a4:	c0001073          	unimp
	...
